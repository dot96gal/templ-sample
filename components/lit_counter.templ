package components

templ LitCounter() {
	<script type="module">
		import {LitElement, html, css} from '/assets/js/lit-all.min.js';
		export class SimpleCounter extends LitElement {
			static properties = {
				count: {type: Number},
			};
			static styles = css`
				.counter {
					display: grid;
					grid-template-areas: "count-indicator"
						"count-button-up"
						"count-button-down";
					justify-items: center;
					text-align: center;
					width: fit-content;
					padding: 20px;
					border: 1px solid #ccc;
					border-radius: 0.5rem;
					background-color: #fff;
				}
				.count-indicator {
					grid-area: count-indicator;
					font-size: 3rem;
					font-weight: bold;
				}
				.count-button {
					width: 100%;
					margin-top: 1rem;
					padding: 0.5rem 1rem;
					border: 1px solid #ccc;
					border-radius: 0.5rem;
					background-color: #fff;
					font-size: 1rem;
					font-weight: bold;
					cursor: pointer;
				}

				.count-button-up {
					grid-area: count-button-up;
				}
				.count-button-down {
					grid-area: count-button-down;
				}
			`;
			constructor() {
				super();
				this.count = 1;
			}
			render() {
				return html`
					<div class="counter">
						<span class="count-indicator">${this.count}</span>
						<button class="count-button count-button-up" @click=${this.countup}>Count Up</button>
						<button class="count-button count-button-down" @click=${this.countdown}>Count Down</button>
					</div>
				`;
			}
			countup() {
				this.count++;
			}
			countdown() {
				this.count--;
			}
		}
		customElements.define("lit-counter", SimpleCounter);
	</script>
	<lit-counter></lit-counter>
}
