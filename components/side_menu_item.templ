package components

css sideMenuItemSelectedStyle() {
	background-color: rgb(75, 84, 98);
}

// [TODO] :hover疑似要素に対応したらリファクタリングする
const sideMenuItemHoverStyleClass = "menu-hover"

templ sideMenuItemHoverStyle(target string) {
	if target == sideMenuItemHoverStyleClass {
		<style>
    .menu-hover:hover {
	    background-color: rgb(94, 102, 115)
    }
  </style>
	}
}

type SideMenuItemProps struct {
	Icon       templ.Component
	Text       string
	Link       string
	IsSelected bool
	Attributes templ.Attributes
}

templ SideMenuItem(props SideMenuItemProps) {
	@IconLink(
		IconLinkProps{
			Icon:            props.Icon,
			Text:            props.Text,
			Link:            props.Link,
			SelectedStyle:   templ.KV(sideMenuItemSelectedStyle(), props.IsSelected),
			HoverStyleClass: sideMenuItemHoverStyleClass,
			HoverStyle:      sideMenuItemHoverStyle(sideMenuItemHoverStyleClass),
			Attributes:      templ.Attributes{"data-testid": props.Attributes["data-testid"]},
		},
	)
}

type SideMenuItemHomeProps struct {
	Link       string
	IsSelected bool
	Attributes templ.Attributes
}

templ SideMenuItemHome(props SideMenuItemHomeProps) {
	@SideMenuItem(
		SideMenuItemProps{
			Icon:       IconHome(IconProps{Width: 24, Height: 24}),
			Text:       "home",
			Link:       props.Link,
			IsSelected: props.IsSelected,
			Attributes: templ.Attributes{"data-testid": props.Attributes["data-testid"]},
		},
	)
}

type SideMenuItemChartProps struct {
	Link       string
	IsSelected bool
	Attributes templ.Attributes
}

templ SideMenuItemChart(props SideMenuItemChartProps) {
	@SideMenuItem(
		SideMenuItemProps{
			Icon:       IconChart(IconProps{Width: 24, Height: 24}),
			Text:       "chart",
			Link:       props.Link,
			IsSelected: props.IsSelected,
			Attributes: templ.Attributes{"data-testid": props.Attributes["data-testid"]},
		},
	)
}

type SideMenuItemTrendProps struct {
	Link       string
	IsSelected bool
	Attributes templ.Attributes
}

templ SideMenuItemTrend(props SideMenuItemTrendProps) {
	@SideMenuItem(
		SideMenuItemProps{
			Icon:       IconTrend(IconProps{Width: 24, Height: 24}),
			Text:       "trend",
			Link:       props.Link,
			IsSelected: props.IsSelected,
			Attributes: templ.Attributes{"data-testid": props.Attributes["data-testid"]},
		},
	)
}
