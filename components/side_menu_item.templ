package components

css sideMenuItemSelectedStyle() {
	background-color: rgb(75, 84, 98);
}

// [TODO] :hover疑似要素に対応したらリファクタリングする
const sideMenuItemHoverStyleClass = "menu-hover"

templ sideMenuItemHoverStyle(target string) {
	<style>
    .menu-hover:hover {
	    background-color: rgb(94, 102, 115)
    }
  </style>
}

type SideMenuItemProps struct {
	Icon templ.Component
	Text string
	Link string
	IsSelected bool
}

templ SideMenuItem(props SideMenuItemProps) {
	@IconLink(
		IconLinkProps{
			Icon: props.Icon,
			Text: props.Text,
			Link: props.Link,
			SelectedStyleKV: templ.KV(sideMenuItemSelectedStyle(), props.IsSelected),
			HoverStyleClass: sideMenuItemHoverStyleClass,
			HoverStyle: sideMenuItemHoverStyle(sideMenuItemHoverStyleClass),
		},	
	)
}

templ sideMenuItemHomeIcon() {
	<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
		<path stroke-linecap="round" stroke-linejoin="round" d="m2.25 12 8.954-8.955c.44-.439 1.152-.439 1.591 0L21.75 12M4.5 9.75v10.125c0 .621.504 1.125 1.125 1.125H9.75v-4.875c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125V21h4.125c.621 0 1.125-.504 1.125-1.125V9.75M8.25 21h8.25"></path>
	</svg>
}

type SideMenuItemHomeProps struct {
	Link string
	IsSelected bool
}

templ SideMenuItemHome(props SideMenuItemHomeProps) {
	@SideMenuItem(
		SideMenuItemProps {
			Icon: sideMenuItemHomeIcon(),
			Text: "home",
			Link: props.Link,
			IsSelected: props.IsSelected,
		},
	)

}

templ sideMenuItemChartIcon() {
	<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
		<path stroke-linecap="round" stroke-linejoin="round" d="M7.5 14.25v2.25m3-4.5v4.5m3-6.75v6.75m3-9v9M6 20.25h12A2.25 2.25 0 0 0 20.25 18V6A2.25 2.25 0 0 0 18 3.75H6A2.25 2.25 0 0 0 3.75 6v12A2.25 2.25 0 0 0 6 20.25Z"></path>
	</svg>
}

type SideMenuItemChartProps struct {
	Link string
	IsSelected bool
}

templ SideMenuItemChart(props SideMenuItemChartProps) {
	@SideMenuItem(
		SideMenuItemProps {
			Icon: sideMenuItemChartIcon(),
			Text: "chart",
			Link: props.Link,
			IsSelected: props.IsSelected,
		},
	)
}

templ sideMenuItemTrendIcon() {
	<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
		<path stroke-linecap="round" stroke-linejoin="round" d="M2.25 18 9 11.25l4.306 4.306a11.95 11.95 0 0 1 5.814-5.518l2.74-1.22m0 0-5.94-2.281m5.94 2.28-2.28 5.941"></path>
	</svg>
}

type SideMenuItemTrendProps struct {
	Link string
	IsSelected bool
}


templ SideMenuItemTrend(props SideMenuItemTrendProps) {
	@SideMenuItem(
		SideMenuItemProps {
			Icon: sideMenuItemTrendIcon(),
			Text: "trend",
			Link: props.Link,
			IsSelected: props.IsSelected,
		},
	)
}
